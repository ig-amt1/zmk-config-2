#include <behaviors.dtsi>
#include "keys_br_abnt2.h"
#include "helper.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define BLE  1
#define NUM  2
#define SYM  3
#define FUN  4
#define gam  5
#define NAV  6
#define FGM  7

AC_KEY(A_acute, BR_A, BR_ACUT)
AC_KEY(A_grave, BR_A, BR_GRAVE)
AC_KEY(A_tilde, BR_A, BR_TILDE)
AC_KEY(A_circ,  BR_A, BR_CIRC)

AC_KEY(E_acute, BR_E, BR_ACUT)
AC_KEY(E_circ,  BR_E, BR_CIRC)

AC_KEY(I_acute, BR_I, BR_ACUT)

AC_KEY(O_acute, BR_O, BR_ACUT)
AC_KEY(O_tilde, BR_O, BR_TILDE)
AC_KEY(O_circ,  BR_O, BR_CIRC)

AC_KEY(U_acute, BR_U, BR_ACUT)

UNDEAD_KEY(tilde, BR_TILDE)
UNDEAD_KEY(caret, BR_CIRC)
UNDEAD_KEY(grave, BR_GRAVE)

&lt {
    tapping-term-ms = <TAPPING_TERM>;
    flavor = "balanced";
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            flavor = "balanced";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // combo_esc {
        //timeout-ms = <50>;
        //key-positions = <13 16>;
        //  bindings = <&caps_word>;
        //  };

        game {
            timeout-ms = <50>;
            bindings = <&tog 5>;
            key-positions = <34 13 12>;
            layers = <0>;
        };

        close {
            timeout-ms = <50>;
            bindings = <&close>;
            key-positions = <0 1 2 3>;
            layers = <0>;
        };

        prtsc_combo {
            timeout-ms = <50>;
            bindings = <&kp PRINTSCREEN>;
            key-positions = <5 4>;
            layers = <0>;
        };

        caps {
            timeout-ms = <50>;
            bindings = <&caps_word>;
            key-positions = <22 23 24>;
            layers = <0>;
        };

        esc {
            timeout-ms = <50>;
            bindings = <&kp ESC>;
            key-positions = <11 12 13>;
            layers = <0>;
        };

        del {
            timeout-ms = <50>;
            bindings = <&kp DEL>;
            key-positions = <8 9>;
            layers = <0>;
        };

        quest {
            bindings = <&kp BR_QMARK>;
            key-positions = <29 28 27>;
            layers = <0>;
        };

        lgui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <10 11>;
            layers = <0>;
        };

        rgui {
            bindings = <&kp RIGHT_GUI>;
            key-positions = <19 18>;
            layers = <0>;
        };

        lock {
            bindings = <&lock>;
            key-positions = <6 7 8>;
            layers = <6>;
        };
    };

    macros {
        close: close {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp F4>,
                <&macro_release>,
                <&kp LALT>;
        };
        copy: copy {
            compatible = "zmk,behavior-macro";
            label = "COPY";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LCTRL>;
        };
        paste: paste {
            compatible = "zmk,behavior-macro";
            label = "PASTE";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LCTRL>;
        };
        cut: cut {
            compatible = "zmk,behavior-macro";
            label = "CUT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LCTRL>;
        };
        undo: undo {
            compatible = "zmk,behavior-macro";
            label = "UNDO";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LCTRL>;
        };
        guileft: guileft {
            compatible = "zmk,behavior-macro";
            label = "GUILEFT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };
        guiright: guiright {
            compatible = "zmk,behavior-macro";
            label = "GUIRIGHT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };
        lock: lock {
            compatible = "zmk,behavior-macro";
            label = "LOCK";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp L>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };
        aagd: aagd {
            compatible = "zmk,behavior-macro";
            label = "AAGD";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp RALT>;
        };
        oagd: oagd {
            compatible = "zmk,behavior-macro";
            label = "OAGD";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp O>,
                <&macro_release>,
                <&kp RALT>;
        };
        iagd: iagd {
            compatible = "zmk,behavior-macro";
            label = "IAGD";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp I>,
                <&macro_release>,
                <&kp RALT>;
        };
        eagd: eagd {
            compatible = "zmk,behavior-macro";
            label = "EAGD";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp E>,
                <&macro_release>,
                <&kp RALT>;
        };
        uagd: uagd {
            compatible = "zmk,behavior-macro";
            label = "UAGD";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp U>,
                <&macro_release>,
                <&kp RALT>;
        };
        ced: ced {
            compatible = "zmk,behavior-macro";
            label = "CED";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp COMMA>,
                <&macro_release>,
                <&kp RALT>;
        };
        acrase: acrase {
            compatible = "zmk,behavior-macro";
            label = "ACRASE";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp GRAVE>,
                <&macro_tap>,
                <&kp A>;
        };
        acirc: acirc {
            compatible = "zmk,behavior-macro";
            label = "ACIRC";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp CARET>,
                <&macro_press>,
                <&kp A>;
        };
        ocirc: ocirc {
            compatible = "zmk,behavior-macro";
            label = "OCIRC";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp CARET>,
                <&macro_tap>,
                <&kp O>;
        };
        ecirc: ecirc {
            compatible = "zmk,behavior-macro";
            label = "ECIRC";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp CARET>,
                <&macro_tap>,
                <&kp E>;
        };
        atil: atil {
            compatible = "zmk,behavior-macro";
            label = "ATIL";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp TILDE>,
                <&macro_tap>,
                <&kp A>;
        };
        otil: otil {
            compatible = "zmk,behavior-macro";
            label = "OTIL";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp TILDE>,
                <&macro_press>,
                <&kp O>;
        };
        cao: cao {
            compatible = "zmk,behavior-macro";
            label = "CAO";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&ced &atil &kp O>;
        };
        ao: ao {
            compatible = "zmk,behavior-macro";
            label = "AO";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&atil &kp O>;
        };
        sr: sr {
            compatible = "zmk,behavior-macro";
            label = "SR";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_7>,
                <&macro_release>,
                <&kp LALT>;
        };
        sra: sra {
            compatible = "zmk,behavior-macro";
            label = "SRA";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
       &kp Q       &kp W        &kp E        &kp R        &kp T        &kp Y        &kp U        &kp I       &kp O          &kp P
       &kp A  &hm LALT S  &hm LSHFT D  &hm LCTRL F        &kp G        &kp H  &hm RCTRL J  &hm RSHFT K  &hm RALT L  &kp SEMICOLON
&none  &kp Z       &kp X        &kp C        &kp V        &kp B        &kp N        &kp M    &kp COMMA     &kp DOT      &kp SLASH  &none
                                &none    &lt 1 TAB  &lt 2 SPACE  &lt 3 ENTER   &lt 6 BSPC        &none
            >;
        };

        ble_layer {
            bindings = <
            &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2        &none   &kp K_COPY  &kp F1   &kp F2   &kp F3   &kp F4
            &none         &none  &out OUT_TOG         &none  &bootloader    &kp K_CUT  &kp F5   &kp F6   &kp F7   &kp F8
&none  &bt BT_CLR         &none         &none         &none   &sys_reset  &kp K_PASTE  &kp F9  &kp F10  &kp F11  &kp F12  &none
                                        &none         &none        &none  &key_repeat   &none    &none
            >;
        };

        number_layer {
            bindings = <
             &kp EXCL        &kp LBKT    &kp COLON         &kp RBKT    &kp HASH     &kp SLASH   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp ASTERISK
        &kp BACKSLASH          &kp LT     &kp PIPE           &kp GT  &kp DOLLAR     &kp COMMA   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6     &kp MINUS
&none  &kp UNDERSCORE  &kp LEFT_BRACE  &kp PERCENT  &kp RIGHT_BRACE   &kp GRAVE  &kp NUMBER_0   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3      &kp PLUS  &none
                                             &none            &none       &none     &kp ENTER  &kp BACKSPACE         &none
            >;
        };

        symbol_layer {
            bindings = <
        &aagd   &oagd             &eagd    &iagd      &uagd          &kp CARET     &eagd       &cao                    &ao          &ced
       &acirc  &ocirc            &ecirc  &acrase  &kp SLASH  &kp DOUBLE_QUOTES  &kp LPAR  &kp COLON  &kp RIGHT_PARENTHESIS     &kp MINUS
&none   &atil   &otil  &kp SINGLE_QUOTE      &sr       &sra          &kp TILDE    &kp AT   &kp HASH               &kp EXCL  &kp QUESTION  &none
                                  &none    &none      &none              &none     &none      &none
            >;
        };

        function_layer {
            bindings = <
       &none  &none  &none  &none  &none  &none  &kp F1   &kp F2   &kp F3   &kp F4
       &none  &none  &none  &none  &none  &none  &kp F5   &kp F6   &kp F7   &kp F8
&none  &none  &none  &none  &none  &none  &none  &kp F9  &kp F10  &kp F11  &kp F12  &none
                     &none  &none  &none  &none   &none    &none
            >;
        };

        game_layer {
            bindings = <
         &kp TAB  &kp Q  &kp W      &kp R      &kp T  &kp C_VOL_UP      &kp Y       &kp N  &kp V    &tog 5
       &kp LSHFT  &kp A  &kp S      &kp D      &kp F  &kp C_VOL_DN      &kp T       &kp M  &kp I     &kp O
&none  &kp LCTRL  &kp Z  &kp X      &kp C      &kp B    &kp K_MUTE  &kp COMMA  &kp PERIOD  &kp L  &kp LGUI  &none
                         &none  &lt 7 ESC  &kp SPACE         &none      &none       &none
            >;
        };

        nav_layer {
            bindings = <
       &kp PG_UP  &kp HOME   &none  &none  &none    &kp C_VOLUME_UP  &kp K_SCROLL_UP    &kp UP  &kp K_SCROLL_DOWN  &kp CAPS
       &kp PG_DN   &kp END   &none  &none  &none  &kp C_VOLUME_DOWN         &kp LEFT  &kp DOWN          &kp RIGHT   &kp DEL
&none      &undo     &copy  &paste   &cut  &none         &kp C_MUTE         &guileft     &none          &guiright     &none  &none
                             &none  &none  &none              &none            &none     &none
            >;
        };

        fgame_layer {
            bindings = <
       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp C_VOL_UP  &kp Y  &none  &none  &kp CAPS
             &kp F6         &kp B         &kp M         &kp T         &kp G  &kp C_VOL_DN  &none  &none  &none     &none
&none        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5    &kp K_MUTE  &none  &none  &none  &kp LGUI  &none
                                          &none         &none         &none         &none  &none  &none
            >;
        };
    };
};
