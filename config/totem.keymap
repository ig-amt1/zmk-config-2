#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "keys_br_abnt2.h"
#include "helper.h"

#define BASE 0
#define ACT  1
#define NUM  2
#define SYM  3
#define FUN  4
#define BT   5
#define NAV  6

AC_KEY(A_acute, BR_A, BR_ACUT)
AC_KEY(A_grave, BR_A, BR_GRAVE)
AC_KEY(A_tilde, BR_A, BR_TILDE)
AC_KEY(A_circ,  BR_A, BR_CIRC)

AC_KEY(E_acute, BR_E, BR_ACUT)
AC_KEY(E_circ,  BR_E, BR_CIRC)

AC_KEY(I_acute, BR_I, BR_ACUT)

AC_KEY(O_acute, BR_O, BR_ACUT)
AC_KEY(O_tilde, BR_O, BR_TILDE)
AC_KEY(O_circ,  BR_O, BR_CIRC)

AC_KEY(U_acute, BR_U, BR_ACUT)

UNDEAD_KEY(tilde, BR_TILDE)
UNDEAD_KEY(caret, BR_CIRC)
UNDEAD_KEY(grave, BR_GRAVE)

&lt {
    tapping-term-ms = <TAPPING_TERM>;
    flavor = "balanced";
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };
    combos {
            compatible = "zmk,combos";
            combo_esc {
                timeout-ms = <50>;
                key-positions = <13 16>;
                bindings = <&caps_word>;
            };
    };

keymap {
    compatible = "zmk,keymap";
    base_layer {
        bindings = <
                &kp BR_J       &kp BR_C       &kp BR_Y       &kp BR_F       &kp BR_K        &kp BR_Z    &kp BR_W       &kp BR_U       &key_repeat   &kp BR_Q
                &hm LGUI BR_R  &hm LALT BR_S  &hm LCTRL BR_T &hm LSHFT BR_H &kp BR_P        &kp BR_M    &hm RSHFT BR_N &hm RCTRL BR_I &hm LALT BR_A &hm RGUI O
   &kp BR_UNDER &kp BR_X       &kp BR_V       &kp BR_G       &lt ACT BR_D   &kp BR_B        &kp BR_SQT  &lt ACT BR_L   &kp BR_COMMA   &kp BR_DOT    &kp BR_SLASH &kp BR_Q
                                              &kp TAB        &lt NAV BR_E   &lt BT BSPC     &lt SYM RET &lt NUM SPACE  &lt FUN ESC
                   >;
    };
    accents_layer {
 	bindings = <
                &none &kp BR_CCED &none &none      &none    &none &none      &U_acute  &A_tilde &O_tilde
                &none &none       &none &kp LSHIFT &none    &none &kp RSHIFT &I_acute  &A_acute &O_acute
        &none   &none &none       &none &E_circ    &none    &none &none      &A_grave  &A_circ  &O_circ  &none
                                  &none &E_acute   &none    &none &none      &none
                        >;
    };
    number_layer {
 	bindings = <
                &kp BR_EXCL  &kp BR_N4   &kp BR_N5   &kp BR_N6   &kp BR_COMMA    &none &none      &none     &none    &none
                &kp BR_COLON &kp BR_N1   &kp BR_N2   &kp BR_N3   &kp BR_EQUAL    &none &kp RSHIFT &kp RCTRL &kp LALT &kp RGUI
        &none   &kp BR_PLUS  &kp BR_N7   &kp BR_N8   &kp BR_N9   &kp BR_BSLH     &none &none      &none     &none    &none &none
                                         &kp BR_DOT  &kp BR_N0   &kp BR_MINUS    &none &none      &none
                        >;
    };
    symbol_layer {
 	bindings = <
                &kp BR_ASTRK &kp BR_AMPS  &kp BR_LBRC &kp BR_RBRC &caret       &none &none      &none     &none    &none
                &kp BR_SEMI  &kp BR_AT    &kp BR_LPAR &kp BR_RPAR &grave       &none &kp RSHIFT &kp RCTRL &kp LALT &kp RGUI
          &none &tilde       &kp BR_PRCNT &kp BR_LBKT &kp BR_RBKT &kp BR_PIPE  &none &none      &none     &none    &none &none
                                          &kp BR_HASH &kp BR_DLLR &kp BR_UNDER &none &none      &none
                        >;
    };
    function_layer {
 	bindings = <
                &kp F12 &kp F4   &kp F5   &kp F6  &none    &none &none      &none     &none    &none
                &kp F11 &kp F1   &kp F2   &kp F3  &none    &none &kp RSHIFT &kp RCTRL &kp LALT &kp RGUI
        &none   &kp F10 &kp F7   &kp F8   &kp F9  &none    &none &none      &none     &none    &none &none
                                 &none    &kp DEL &none    &none &none      &none
                        >;
    };
    bluetooth_layer {
 	bindings = <
                &none   &none     &kp BR_LT    &kp BR_GT     &none   &none &none         &none        &none        &none
                &kp RET &kp SPACE &kp LEFT     &kp RIGHT     &none   &none &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &none
          &none &none   &none     &kp LS(LEFT) &kp LS(RIGHT) &none   &none &out OUT_TOG  &none        &none        &none &bt BT_CLR
                                  &bootloader  &reset        &none   &none &reset        &bootloader
                        >;
    };
    nav_layer {
 	bindings = <
                &none    &none    &none     &none      &none    &none &kp PG_UP &kp HOME   &kp END &kp KP_PLUS
                &kp LGUI &kp LALT &kp LCTRL &kp LSHIFT &none    &none &kp LEFT  &kp DOWN   &kp UP      &kp RIGHT
          &none &none    &none 	  &none     &none      &none    &none &kp PG_DN &kp K_COPY &kp K_PASTE &kp K_CUT &none
                                  &none     &none      &none    &none &kp PSCRN &none
                        >;
    };
    };
};