//#include <behaviors.dtsi>
//#include "keys_br_abnt2.h"
#include "helper.h"
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <accents.dtsi>

#define BASE 0
#define ACT  1
#define NUM  2
#define SYM  3
#define FUN  4
#define gam  5
#define NAV  6
#define FGM  7
#define ADJ  8

/*AC_KEY(A_acute, BR_A, BR_ACUT)
AC_KEY(A_grave, BR_A, BR_GRAVE)
AC_KEY(A_tilde, BR_A, BR_TILDE)
AC_KEY(A_circ,  BR_A, BR_CIRC)

AC_KEY(E_acute, BR_E, BR_ACUT)
AC_KEY(E_circ,  BR_E, BR_CIRC)

AC_KEY(I_acute, BR_I, BR_ACUT)

AC_KEY(O_acute, BR_O, BR_ACUT)
AC_KEY(O_tilde, BR_O, BR_TILDE)
AC_KEY(O_circ,  BR_O, BR_CIRC)

AC_KEY(U_acute, BR_U, BR_ACUT)

UNDEAD_KEY(tilde, BR_TILDE)
UNDEAD_KEY(caret, BR_CIRC)
UNDEAD_KEY(grave, BR_GRAVE)*/

&lt {
    tapping-term-ms = <TAPPING_TERM>;
    flavor = "balanced";
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            flavor = "balanced";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // combo_esc {
        //timeout-ms = <50>;
        //key-positions = <13 16>;
        //  bindings = <&caps_word>;
        //  };

        game {
            timeout-ms = <50>;
            bindings = <&tog 5>;
            key-positions = <9 19 30>;
            layers = <0>;
        };

        close {
            timeout-ms = <50>;
            bindings = <&close>;
            key-positions = <0 1 2 3>;
            layers = <0>;
        };

        prtsc_combo {
            timeout-ms = <50>;
            bindings = <&kp PRINTSCREEN>;
            key-positions = <5 4>;
            layers = <0>;
        };

        caps {
            timeout-ms = <50>;
            bindings = <&caps_word>;
            key-positions = <22 23 24>;
            layers = <0>;
        };

        esc {
            timeout-ms = <50>;
            bindings = <&kp ESC>;
            key-positions = <11 12 13>;
            layers = <0>;
        };

        del {
            timeout-ms = <50>;
            bindings = <&kp DEL>;
            key-positions = <8 9>;
            layers = <0>;
        };
    };
    macros {
     close: close {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp F4>,
                <&macro_release>,
                <&kp LALT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
            &kp Q       &kp W        &kp E        &kp R     &kp T       &kp Y   &kp U        &kp I       &kp O          &kp P
       &hm LGUI A  &hm LALT S  &hm LSHFT D  &hm LCTRL F     &kp G       &kp H   &hm RCTRL J  &hm RSHFT K  &hm LALT L  &hm RGUI SEMI
&none       &kp Z       &kp X        &kp C      &lt 1 V     &kp B       &kp N   &kp M    &kp COMMA     &kp DOT      &kp SLASH  &none
                                              &none       &lt 4 TAB  &lt 2 SPACE  &lt 3 ENTER     &lt 6 BSPC           &none
            >;
        };

        accents_layer {
            bindings = <
       &none  &kp BR_CCED  &none       &none  &none  &none  &kp BR_CCED  &U_acute  &A_tilde  &O_tilde
       &none        &none  &none  &kp LSHIFT  &none  &none     &E_acute  &I_acute  &A_acute  &O_acute
&none  &none        &none  &none     &E_circ  &none  &none      &E_circ  &A_grave   &A_circ   &O_circ  &none
                           &none    &E_acute  &none  &none        &none     &none
            >;
        };

        number_layer {
            bindings = <
       &kp DQT    &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PLUS  &kp N7  &kp N8  &kp N9  &kp BSLH
       &kp PRCNT  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp MINUS &kp N4  &kp N5  &kp N6  &kp COMMA
&none  &kp UNDER  &kp LBRC   &kp RBRC   &kp LT    &kp GT    &kp COLON &kp N1  &kp N2  &kp N3  &kp EQUAL  &none
                                         &none        &none        &none    &kp DOT  &kp N0      &none
            >;
        };

        symbol_layer {
            bindings = <
        &kp ASTRK   &kp AMPS &kp  LBRC  &kp  RBRC        &caret  &none       &none      &none     &none     &none
        &kp SEMI    &kp AT   &kp  LPAR  &kp  RPAR        &grave  &none  &kp RSHIFT  &kp RCTRL  &kp LALT  &kp RGUI
&none   &tilde  &kp PRCNT  &kp LBKT  &kp  RBKT   &kp BR_PIPE  &none       &none      &none     &none     &none  &none
                                         &none  &kp BR_DLLR  &kp BR_UNDER  &none       &none      &none
            >;
        };

        function_layer {
            bindings = <
            &none  &none         &none         &none         &none    &none       &kp F1   &kp F2   &kp F3   &kp F4
            &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none    &none       &kp F5   &kp F6   &kp F7   &kp F8
&none  &bt BT_CLR         &none   &out OUT_TOG    &none      &none    &none       &kp F9  &kp F10  &kp F11  &kp F12  &none
                                        &none         &none  &none    &reset  &bootloader    &none
            >;
        };

        game_layer {
            bindings = <
         &kp TAB  &kp Q  &kp  W   &kp  E   &kp  R  &kp C_VOL_UP  &kp  Y      &kp  N    &kp  V    &tog 5
       &kp LSHFT  &kp A  &kp  S   &kp  D   &kp  F  &kp C_VOL_DN  &kp  T      &kp  M    &kp  I    &none
&none  &kp LCTRL  &kp Z  &kp  X   &kp  C   &kp  B      &kp  N  &kp  M  &kp  COMMA  &kp  DOT  &kp LGUI  &none
                               &none  &lt 7 ESC  &kp SPACE         &none     &none         &none
            >;
        };

        nav_layer {
            bindings = <
       &kp PG_UP    &kp HOME      &kp END  &kp KP_PLUS       &none    &kp C_VOLUME_UP  &kp K_SCROLL_UP    &kp UP  &kp K_SCROLL_DOWN  &kp CAPS
        &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHIFT  &kp K_MUTE  &kp C_VOLUME_DOWN         &kp LEFT  &kp DOWN          &kp RIGHT   &kp DEL
&none  &kp PG_DN  &kp K_COPY  &kp K_PASTE    &kp K_CUT   &kp PSCRN              &none            &none     &none              &none     &none  &none
                                    &none        &none       &none              &none            &none     &none
            >;
        };

        fgame_layer {
            bindings = <
          &kp N1  &kp N2  &kp N3  &kp N4  &kp N5   &kp C_VOL_UP  &kp Y      &kp N    &kp V  &kp CAPS
          &kp F6  &kp B   &kp M   &kp T   &kp G    &kp C_VOL_DN  &kp T      &kp M    &kp I     &none
&none     &kp F1  &kp F2  &kp F3  &kp F4  &kp F5      &kp N  &kp M  &kp COMMA  &kp DOT  &kp LGUI  &none
                                 &none      &none      &none         &none     &none         &none
            >;
        };

          adjust_layer {
            bindings = <
            &none  &none         &none         &none         &none    &none       &kp F1   &kp F2   &kp F3   &kp F4
            &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none    &none       &kp F5   &kp F6   &kp F7   &kp F8
&none  &bt BT_CLR         &none   &out OUT_TOG    &none      &none    &none       &kp F9  &kp F10  &kp F11  &kp F12  &none
                                        &none         &none  &none    &reset  &bootloader    &none
            >;
        };
    };
};
